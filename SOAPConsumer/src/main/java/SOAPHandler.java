import java.util.ArrayList;
import java.util.List;

import org.apache.cxf.jaxws.JaxWsProxyFactoryBean;

import com.hotel.utility.HotelUtility;

public class SOAPHandler {
    private static String url = "http://localhost:8080/HotelUtility/services";
    private Object client;
    
    public SOAPHandler()
    {
    	JaxWsProxyFactoryBean factory = new JaxWsProxyFactoryBean();
        // Use the URL defined in the soap address portion of the WSDL
        factory.setAddress(url + "/HotelUtilityPort");
        // Utilize the class which was auto-generated by Apache CXF wsdl2java
        factory.setServiceClass(HotelUtility.class);
        this.client = factory.create();
    }

    private Object getSOAPClient(){
        return this.client;
    }

    public ArrayList<String> listRooms(String inDate, String outDate) {
    	Object client = getSOAPClient();
    	try {
    		List<String> rooms = ((HotelUtility)client).listRooms(inDate, outDate);
    		return (ArrayList<String>) rooms;
    	}catch (Exception e)
    	{
    		System.out.println(e);
    		return null;
    	}
    }
    
    public String bookRoom(String inDate, String outDate, String clientEmail, int numberOfPeople, int roomId){
    	Object client = getSOAPClient();
    	try {
    		String response = ((HotelUtility)client).bookRoom(inDate, outDate, clientEmail, numberOfPeople, roomId);
    		return response;
    	}catch (Exception e)
    	{
    		return null;
    	}
    }
    
    public Boolean cancel(String id){
    	Object client = getSOAPClient();
    	try {
    		boolean response = ((HotelUtility)client).cancelReservation(id);
    		return response;
    	}catch (Exception e)
    	{
    		return null;
    	}
    }
    
    public Boolean register(String email, String password) {
    	Object client = getSOAPClient();
    	try {
    		boolean response = ((HotelUtility)client).registerUser(email, password);
    		return response;
    	}catch (Exception e)
    	{
    		return null;
    	}
    }
    
    public Boolean login(String email, String password) {
    	Object client = getSOAPClient();
    	try {
    		boolean response = ((HotelUtility)client).loginUser(email, password);
    		return response;
    	}catch (Exception e)
    	{
    		return null;
    	}
    }
    
    public List<String> bookingByEmail(String email) {
    	Object client = getSOAPClient();
    	try {
    		List<String> response = ((HotelUtility)client).bookingsByEmail(email);
    		return response;
    	}catch (Exception e)
    	{
    		return null;
    	}
    }
    
    public String getFloorAndCapacity(int roomId)
    {
    	Object client = getSOAPClient();
    	try {
    		String response = ((HotelUtility)client).getRoomFloorAndCapacity(roomId);
    		return response;
    	}catch (Exception e)
    	{
    		return null;
    	}
    }
}


